from random import seed

from lib.es import es_comma, es_plus
from lib.plot import plot_func
import numpy as np


# objective function
def objective(v):
    x, y = v
    return 100 * (y - x ** 2) ** 2 + (x - 1) ** 2


def main():
    # seed the pseudorandom number generator
    seed(1)
    # define range for input
    Xbounds = [-30, 29]
    Ybounds = [-29, 30]
    bounds = np.asarray([Xbounds, Ybounds])
    # define the total iterations
    n_iter = 5000
    # define the maximum step size
    step_size = 0.15
    # number of parents selected
    mu = 20
    # inital population size (the number of children generated by parents)
    lam = 100
    # perform the evolution strategy (mu, lambda) search
    best, score = es_comma(objective, bounds, n_iter, step_size, n_selected_parents=mu, population_size=lam)
    print('Done!')
    print('f(%s) = %f' % (best, score))


if __name__ == '__main__':
    plot_func(objective, ([-30, 29], [-29, 30]))
    main()
